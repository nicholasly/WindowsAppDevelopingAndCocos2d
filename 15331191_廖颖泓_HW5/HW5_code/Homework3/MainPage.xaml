   <Page
    x:Class="Homework3.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Homework3"
    xmlns:data="using:Homework3.Models"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    mc:Ignorable="d">

    <Page.BottomAppBar>
        <CommandBar>
            <AppBarButton x:Name="DeleteAppBarButton" Icon="Add" Label="Add" Click="AddAppBarButton_Click"/>
        </CommandBar>
    </Page.BottomAppBar>
    <Page.Resources>
        <local:doubleConverter x:Key="doubleConverter"/>
        <local:BoolConverter x:Key="BoolConverter"/>
    </Page.Resources>

    <Grid x:Name="All" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup">
                <VisualState x:Name="VisualStateMin0">
                    <VisualState.Setters>
                        <Setter Target="InlineToDoItemViewGrid.(UIElement.Visibility)" Value="Collapsed"/>
                        <Setter Target="ToDoListView.(Grid.ColumnSpan)" Value="2"/>
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1"/>
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="HideEditMin800">
                    <VisualState.Setters>
                        <Setter Target="DeleteAppBarButton.IsEnabled" Value="false"/>
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="800"/>
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="VisualStateMin800">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="800"/>
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <TextBlock  Grid.Row="0" x:Name="textBlock" Text="Todos" Style="{StaticResource HeaderTextBlockStyle}"/>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <ListView x:Name="ToDoListView" IsItemClickEnabled="True" ItemClick="TodoItem_ItemClicked"
                      ItemsSource="{x:Bind ViewModel.AllItems}">
                <ListView.ItemTemplate>
                    <DataTemplate x:DataType="data:TodoItem">
                        <Grid x:Name="ItemGrid" Height="100">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="UserControl">
                                    <VisualState x:Name="VisualStateMin0">
                                        <VisualState.Setters>
                                            <Setter Target="image.(UIElement.Visibility)" Value="Collapsed"/>
                                        </VisualState.Setters>
                                        <VisualState.StateTriggers>
                                            <AdaptiveTrigger MinWindowWidth="1"/>
                                        </VisualState.StateTriggers>
                                    </VisualState>
                                    <VisualState x:Name="VisualStateMin600">
                                        <VisualState.Setters>
                                            <Setter Target="image.(UIElement.Visibility)" Value="Visible"/>
                                        </VisualState.Setters>
                                        <VisualState.StateTriggers>
                                            <AdaptiveTrigger MinWindowWidth="600"/>
                                        </VisualState.StateTriggers>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="42"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="100"/>
                            </Grid.ColumnDefinitions>

                            <CheckBox x:Name="checkbox" Grid.Column="0" VerticalAlignment="Center" Height="32" Width="32" IsChecked="{x:Bind completed, Converter={StaticResource BoolConverter},Mode=TwoWay}"/>
                            <Image x:Name="image" Grid.Column="1" Source="Assets/background.jpg" Height="90" Width="90" Margin="0,3,12,7"/>
                            <TextBlock Text="{Binding title, Mode=TwoWay}" Grid.Column="2" VerticalAlignment="Center" Foreground="Black" FontWeight="Normal" FontSize="15" LineHeight="20" TextWrapping="Wrap" />
                            <Line x:Name="LINE" Grid.Column="2" Stretch="Fill" Stroke="Black" StrokeThickness="2" X1="1" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="0,0,20,0" Opacity="{Binding IsChecked,ElementName=checkbox,Converter={StaticResource doubleConverter}, Mode=TwoWay}"/>
                            <AppBarButton Grid.Column="3" Icon="Setting" IsCompact="True" VerticalAlignment="Center"  Click="setSelectItem">
                                <AppBarButton.Flyout>
                                    <MenuFlyout>
                                        <MenuFlyoutItem Text="Edit"/>
                                        <MenuFlyoutItem Text="Delete"/>
                                        <MenuFlyoutItem Text="Share" Click="MenuFlyoutItem_Click"/>
                                    </MenuFlyout>
                                </AppBarButton.Flyout>
                            </AppBarButton>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

            <Grid x:Name="InlineToDoItemViewGrid" Grid.Column="1" >
                <ScrollViewer Margin="20">
                    <StackPanel>
                        <Image x:Name="image" Source="Assets/background.jpg" Width="350" Height="180" Margin="4" RenderTransformOrigin="0.5,0.5">
                            <Image.RenderTransform>
                                <CompositeTransform ScaleX="{Binding Value, ElementName=MySlider}"
                                ScaleY="{Binding Value, ElementName=MySlider}"/>
                            </Image.RenderTransform>
                        </Image>
                        <Slider Padding="50,0,50,0" Minimum="0.5" Maximum="1.0" StepFrequency="0.1" x:Name="MySlider"/>
                        <TextBox x:Name="Title" Width="350" Header="Title" Margin="0,12,0,0" />
                        <TextBox x:Name="Details" Width="350" Height="96" Margin="0,12,0,0" Header="Details" />
                        <DatePicker x:Name="DueDate" Width="350" Margin="0,12,0,0" Header="Due Date" HorizontalAlignment="Center" />
                        <RelativePanel Width="350" Margin="0,24,0,0">
                            <Button x:Name="createButton" Content="Create" Click="createButton_Click"></Button>
                            <Button x:Name="cancelButton" Content="Cancel" RelativePanel.AlignRightWithPanel="True" Click="cancelButton_Click"></Button>
                        </RelativePanel>
                    </StackPanel>
                </ScrollViewer>
            </Grid>
        </Grid>
    </Grid>
</Page>
